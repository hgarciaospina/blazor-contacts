@page "/"

@inject IContactService ContactService
@inject NavigationManager NavigationManager


<h3>Contacts</h3>

@Message

<table>
    <tbody>
        <tr>
            <td colspan="2"><a href="/contactdetails" class="btn btn-primary mb-2">Add New</a></td>
        </tr>
    </tbody>

</table>

@if (contacts == null)
{
    <p><em>Loading....</em></p>
}
else
{

    <RadzenDataGrid 
                AllowFiltering="true"
                AllowColumnResize="true"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" 
                FilterMode="FilterMode.Advanced"
                AllowPaging="true" 
                PageSize="5"
                AllowSorting="true"
                Data="@contacts"
                TItem="Contact"
                ColumnWidth="200px"
                FilterPopupRenderMode="PopupRenderMode.OnDemand">

                <Columns>
                    <RadzenDataGridColumn TItem="Contact" Property="FullName" Title="Name" />
                    <RadzenDataGridColumn TItem="Contact" Property="Phone" Title="Phone" />
                    <RadzenDataGridColumn TItem="Contact" Property="Address" Title="Address" />
                    <RadzenDataGridColumn TItem="Contact" Title="Edit">
                        <Template Context="data">
                            <RadzenLink Path="@($"/contactdetails/{data.Id}")" Text="Edit"></RadzenLink>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Contact" Title="Delete">
                        <Template Context="data">
                            <RadzenLink Path="@($"/contactdelete/{data.Id}")" Text="Delete"></RadzenLink>
                        </Template>
                    </RadzenDataGridColumn>       
                </Columns>
    </RadzenDataGrid>
}


@code {
    IQueryable<Contact> contacts;
    public string Message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var collection = await ContactService.GetAll();
            contacts = collection.AsQueryable();
        }
        catch (Exception e)
        {
            
            Message = "Error..." + e.InnerException.StackTrace;
        }
    }

}
